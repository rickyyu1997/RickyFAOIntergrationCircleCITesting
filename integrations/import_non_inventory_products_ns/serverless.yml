service: frankandoak-import-non-inventory-products-ns

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters
custom:
  pythonRequirements:
    dockerizePip: false

package:
  exclude:
    - ./**
  include:
    - import_non_inventory_products_ns/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  tenant: frankandoak
  region: us-east-1
  destinationPrefix: import_files/
  importLogin: frankandoak.x.api@newstore.com
  importPassword: kir*wugh8NAK1sect
  metaName: initialisation repository
  metaProvider: frankandoak
  namespaceMetaFields: products
  urlApi: frankandoak.x.newstore.net
  urlImagePlaceholder:
  deploymentBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  configBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
  role: arn:aws:iam::#{AWS::AccountId}:role/LambdaExecutionRole
  environment:
    STAGE: ${self:provider.stage}
    TENANT: ${self:provider.tenant}

functions:
  import_non_inventory_products_ns_lambda:
    name: ${self:provider.tenant}-import-non-inventory-products-ns
    handler: import_non_inventory_products_ns.aws.main.handler
    timeout: 300
    memorySize: 128
    environment:
      TENANT: ${self:provider.tenant}
      STAGE: ${self:provider.stage}
      DESTINATION_BUCKET: ${self:provider.deploymentBucket}
      DESTINATION_PREFIX: ${self:provider.destinationPrefix}
      import_login: ${self:provider.importLogin}
      import_password: ${self:provider.importPassword}
      meta_name: ${self:provider.metaName}
      meta_provider: ${self:provider.metaProvider}
      namespace_metafields: products
      s3_bucket: ${self:provider.configBucket}
      s3_bucket_key: ${self:provider.destinationPrefix}
      url_api: ${self:provider.urlApi}
      url_image_placeholder: https://${self:provider.deploymentBucket}.s3.amazonaws.com/image_placeholder.jpg
      newstore_auth_lambda: ${self:provider.tenant}-auth-token-generator-${self:provider.stage}-get_auth_token
      newstore_url_api: ${self:provider.tenant}.${self:provider.stage}.newstore.net
      newstore_use_auth_lambda: 1
