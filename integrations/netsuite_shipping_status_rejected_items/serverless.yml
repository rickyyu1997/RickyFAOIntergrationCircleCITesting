service: frankandoak-netsuite-shipping-status-rejected-items

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: false

package:
  exclude:
    - ./**
  include:
    - netsuite_shipping_status_rejected_items/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  tenant: frankandoak
  region: us-east-1
  deploymentBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  configBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
  role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/LambdaExecutionRole'
  environment:
    STAGE: ${self:provider.stage}
    TENANT: ${self:provider.tenant}
    SEARCH_PAGE_SIZE: 50
    LOG_LEVEL: INFO
    newstore_url_api: ${self:provider.tenant}.${self:provider.stage}.newstore.net
    newstore_use_auth_lambda: 1
    newstore_auth_lambda: ${self:provider.tenant}-auth-token-generator-${self:provider.stage}-get_auth_token

functions:
  returns:
    name: ${self:provider.tenant}-netsuite-shipping-status-rejected-items
    handler: netsuite_shipping_status_rejected_items.aws.netsuite_rejected_items_to_newstore.handler
    timeout: 300
    memorySize: 128
    events:
      - schedule:
          name: ${self:provider.tenant}-netsuite-rejected-items-to-newstore-trigger
          rate: rate(5 minutes)
