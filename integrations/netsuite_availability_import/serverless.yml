service: frankandoak-netsuite-availability-import

plugins:
  - serverless-python-requirements
  - serverless-plugin-existing-s3
custom:
  pythonRequirements:
    dockerizePip: false

package:
  exclude:
    - ./**
  include:
    - netsuite_availability_import/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  tenant: frankandoak
  region: us-east-1
  deploymentBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  configBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
  role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaExecutionRole"

functions:
  availability_import_csv_to_import:
    name: ${self:provider.tenant}-cii-inventory-csv-to-import
    handler: netsuite_availability_import.aws.lambda_csv_to_import.handler
    timeout: 45
    memorySize: 128
    environment:
      REGION: ${self:provider.region}
      CFR_TABLE: ${self:resources.Resources.CFRTable.Properties.TableName}
      S3_BUCKET_NAME: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
      S3_CHUNK_INTERVAL: "30"
      S3_CHUNK_SIZE: "1000"
      S3_PREFIX: queued_for_import/
      STATE_MACHINE_ARN: !Sub "arn:aws:states:us-east-1:${AWS::AccountId}:stateMachine:stn-state-machine"
      TENANT: ${self:provider.tenant}
      STAGE: ${self:provider.stage}
      LOG_LEVEL: INFO
    events:
      - s3:
          bucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
          event: s3:ObjectCreated:*
          rules:
            - prefix: import_CSVs/FAONSINV_
            - suffix: .csv
          existing: true
resources:
  Resources:
    CFRTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TableName: cfr_table
        BillingMode: PAY_PER_REQUEST
