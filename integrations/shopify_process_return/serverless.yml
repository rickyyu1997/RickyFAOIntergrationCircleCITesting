service: frankandoak-shopify-process-return

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters
custom:
  pythonRequirements:
    dockerizePip: false

package:
  exclude:
    - ./**
  include:
    - shopify_process_return/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  tenant: frankandoak
  region: us-east-1
  deploymentBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  configBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
  role: arn:aws:iam::#{AWS::AccountId}:role/LambdaExecutionRole
  environment:
    STAGE: ${self:provider.stage}
    TENANT: ${self:provider.tenant}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:GetQueueUrl
        - sqs:SendMessage
        - sqs:GetQueueAttributes
      Resource: !GetAtt ShopifyReturnQueue.Arn

functions:
  receive_shopify_return:
    name: ${self:provider.tenant}-receive-shopify-return
    handler: receive_refund.handler
    timeout: 300
    memorySize: 128
    environment:
      sqs_returns_name: ${self:provider.tenant}-refunds-processor
    events:
      - http: POST /d/shopify/process/return

  process_shopify_return:
    name: ${self:provider.tenant}-process-shopify-return
    handler: process_refund.handler
    timeout: 120
    memorySize: 128
    environment:
      sqs_returns_name:
        Fn::GetAtt:
          - ShopifyReturnQueue
          - QueueName
      warehouse_usc: 'Pixior Ecom'
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - ShopifyReturnQueue
              - Arn
          batchSize: 1

  register_hook_on_newstore:
    name: ${self:provider.tenant}-shopify-register-return-hook
    handler: register_hook.handler
    timeout: 300
    memorySize: 128
    environment:
      # TODO
      # process_return_url: { "Fn::Join" : ["", [ "https://", {"Ref" : "ShopifyReturnProcessAPI"}, ".execute-api.", {"Ref": "AWS::Region"},".amazonaws.com/api/d/shopify/process/return" ] ]  }
    events:
      - schedule:
          name: ${self:provider.tenant}-shopify-trigger-register-return-hook
          rate: rate(1 day)

  sync_returns_from_shopify:
    name: ${self:provider.tenant}-shopify-sync-returns-with-shopify
    handler: sync_refund.handler
    timeout: 300
    memorySize: 128
    environment:
      sqs_returns_name:
        Fn::GetAtt:
          - ShopifyReturnQueue
          - QueueName
    events:
      - schedule:
          name: ${self:provider.tenant}-shopify-trigger-sync-returns-with-shopify
          rate: rate(1 day)

resources:
  Resources:
    ShopifyReturnQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.tenant}-refunds-processor
        VisibilityTimeout: 120
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt ShopifyReturnDeadLetterQueue.Arn
          maxReceiveCount: 5

    ShopifyReturnDeadLetterQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.tenant}-refunds-processor-dlq
