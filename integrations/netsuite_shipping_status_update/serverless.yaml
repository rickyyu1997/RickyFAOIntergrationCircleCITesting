service: frankandoak-netsuite-shipping-status-update

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: false

package:
  exclude:
    - ./**
  include:
    - netsuite_shipping_status_update/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  tenant: frankandoak
  region: us-east-1
  role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/LambdaExecutionRole'
  configBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
  deploymentBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  environment:
    STAGE: ${self:provider.stage}
    TENANT: ${self:provider.tenant}
  configuration:
    maxMessageQueueReadSize: 15
    netsuitePageSearchSize: 20

functions:
  shipping_status_update_processor:
    name: ${self:provider.tenant}-shipping-status-update
    memorySize: 128
    timeout: 900
    handler: netsuite_shipping_status_update.aws.netsuite_shipping_status_to_newstore.handler
    environment:
      LOG_LEVEL: INFO
      NETSUITE_SEARCH_PAGE_SIZE: ${self:provider.configuration.netsuitePageSearchSize}
      STAGE: ${self:provider.stage}
      TENANT: ${self:provider.tenant}
    events:
      - schedule:
          name: ${self:provider.tenant}-shipping-status-update-trigger
          rate: rate(5 minutes)
