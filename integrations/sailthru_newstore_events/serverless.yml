service: ${self:custom.tenant}-sailthru-newstore-events
frameworkVersion: ^2.34.0
configValidationMode: error

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters
custom:
  tenant: frankandoak
  configBucket: ${self:custom.tenant}-${self:provider.stage}-0-newstore-dmz

  pythonRequirements:
    dockerizePip: false

package:
  patterns:
    - '!./**'
    - sailthru_newstore_events/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  region: us-east-1
  deploymentBucket: ${self:custom.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  role: arn:aws:iam::#{AWS::AccountId}:role/LambdaExecutionRole
  environment:
    STAGE: ${self:provider.stage}
    TENANT: ${self:custom.tenant}
    newstore_url_api: ${self:custom.tenant}.${self:provider.stage}.newstore.net
    newstore_use_auth_lambda: 1
    newstore_auth_lambda: ${self:custom.tenant}-auth-token-generator-${self:provider.stage}-get_auth_token
    SAILTHRU_QUEUE: !GetAtt SailthruQueue.QueueName
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:GetQueueUrl
        - sqs:SendMessage
        - sqs:GetQueueAttributes
      Resource: !GetAtt SailthruQueue.Arn

functions:
  sailthru_webhook:
    name: ${self:custom.tenant}-sailthru-webhook
    handler: sailthru_newstore_events.webhook.handler
    timeout: 300
    memorySize: 128
    environment:
      SAILTHRU_HOOK_NAME: sailthru-events
      SAILTHRU_AWSAPI_URL:
        Fn::Join:
          - ''
          - - 'https://'
            - Ref: ApiGatewayRestApi
            - '.execute-api.'
            - Ref: AWS::Region
            - '.amazonaws.com/'
            - ${self:provider.stage}
            - '/sailthru-event'
      EVENTS_TO_FILTER: fulfillment_request.items_completed,order.items_cancelled
    events:
      - schedule:
          name: ${self:custom.tenant}-sailthru-trigger-webhook
          rate: rate(1 day)

  receive_sailthru_event:
    name: ${self:custom.tenant}-sailthru-event-receive
    handler: sailthru_newstore_events.receive.handler
    timeout: 300
    memorySize: 128
    environment:
      CANCELLED_EVENT_NAME: order.items_cancelled
    events:
      - http: POST /sailthru-event

  process_sailthru_event:
    name: ${self:custom.tenant}-sailthru-event-process
    handler: sailthru_newstore_events.process_to_sailthru.handler
    timeout: 300
    memorySize: 128
    environment:
      INVOKE_SAILTHRU_LAMBDA: ${self:custom.tenant}-sailthru
      SAILTHRU_TEMPLATES_PARAM: sailthru_templates
      TO_PROCESS_COUNTRIES: ''
      STORE_LANGUAGE_MAPPING: non_english_store_language_mapping
      BURTON_CANCEL_CODES: ''
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SailthruQueue
              - Arn
          batchSize: 1

resources:
  Resources:
    SailthruQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:custom.tenant}-sailthru-event-queue.fifo
        ContentBasedDeduplication: true
        FifoQueue: true
        VisibilityTimeout: 300
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt SailthruDeadLetterQueue.Arn
          maxReceiveCount: 3

    SailthruDeadLetterQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:custom.tenant}-sailthru-event-dlq.fifo
        ContentBasedDeduplication: true
        FifoQueue: true
