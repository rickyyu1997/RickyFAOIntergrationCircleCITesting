service: frankandoak-shopify-process-cancellation

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: false

package:
  exclude:
    - ./**
  include:
    - shopify_process_cancellation/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  tenant: frankandoak
  region: us-east-1
  deploymentBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  configBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
  role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/LambdaExecutionRole'
  environment:
    STAGE: ${self:provider.stage}
    TENANT: ${self:provider.tenant}
    REGION: ${self:provider.region}
    newstore_auth_lambda: ${self:provider.tenant}-auth-token-generator-${self:provider.stage}-get_auth_token
    newstore_url_api: ${self:provider.tenant}.${self:provider.stage}.newstore.net
    newstore_use_auth_lambda: 1

functions:
  receive_event:
    name: ${self:provider.tenant}-shopify-cancellation-event-stream-to-sqs
    handler: shopify_process_cancellation.aws.event_stream_to_sqs.handler
    timeout: 300
    memorySize: 128
    environment:
      SQS_SHOPIFY_CANCELLATION: !GetAtt ShopifyCancellationQueue.QueueName
    events:
      - http: POST /shopify_process_cancellation/receive_event
  process_cancellation:
    name: ${self:provider.tenant}-shopify-sqs-cancellation-to-shopify
    handler: shopify_process_cancellation.aws.sqs_cancellation_to_shopify.handler
    timeout: 900
    memorySize: 128
    environment:
      SQS_QUEUE: !GetAtt ShopifyCancellationQueue.QueueName
      MAX_MESSAGE_QUEUE_SIZE: 50
    events:
      - schedule:
          name: ${self:provider.tenant}-shopify-trigger-cancellation-to-shopify
          rate: rate(10 minutes)
  register_hook_on_newstore:
    name: ${self:provider.tenant}-shopify-cancellation-register-webhook
    handler: shopify_process_cancellation.aws.webhook_register.handler
    timeout: 300
    memorySize: 128
    environment:
      WEBHOOK_URL:
        Fn::Join:
          - ''
          - - 'https://'
            - Ref: ApiGatewayRestApi
            - '.execute-api.'
            - Ref: AWS::Region
            - '.amazonaws.com/'
            - ${self:provider.stage}
            - '/shopify_process_cancellation/receive_event'
      WEBHOOK_NAME: ${self:provider.tenant}-shopify-cancellation-event-to-sqs
      WEBHOOK_EVENT_FILTER: 'order.cancelled'
    events:
      - schedule:
          name: ${self:provider.tenant}-shopify-cancellation-trigger-register-hook
          rate: rate(1 day)

resources:
  Resources:
    ShopifyCancellationQueue:
      Type: AWS::SQS::Queue
      Properties:
        ContentBasedDeduplication: True
        FifoQueue: True
        QueueName:  ${self:provider.tenant}-cancellation-to-shopify-queue.fifo
        RedrivePolicy:
          deadLetterTargetArn:
            "Fn::GetAtt":
              - ShopifyCancellationDeadLetterQueue
              - Arn
          maxReceiveCount: 3
    ShopifyCancellationDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        ContentBasedDeduplication: True
        FifoQueue: True
        MessageRetentionPeriod: 1209600 # 14 days
        QueueName: ${self:provider.tenant}-cancellation-to-shopify-dlq.fifo
