service:
  name: netsuite-financial-reconciliation

plugins:
  - serverless-python-requirements
package:
  exclude:
    - ./**
  include:
    - netsuite_financial_reconciliation/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  tenant: frankandoak
  region: us-east-1
  deploymentBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  configBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
  role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/LambdaExecutionRole'

functions:
  netsuite_cash_sale_injection:
    name: ${self:provider.tenant}-netsuite-cash-sale-injection
    handler: netsuite_financial_reconciliation.aws.cash_sale_injection.main.handler
    timeout: 900
    memorySize: 256
    environment:
      TENANT: ${self:provider.tenant}
      STAGE: ${self:provider.stage}
      SQS_QUEUE: ${self:resources.Resources.IncomingCashSalesQueue.Properties.QueueName}
      MAX_MESSAGE_QUEUE_SIZE: 40
    events:
      - schedule:
          name: ${self:provider.tenant}-netsuite-cash-sales-injection-trigger
          rate: rate(2 minutes)

  netsuite_sales_order_injection:
    name: ${self:provider.tenant}-netsuite-sales-order-injection
    handler: netsuite_financial_reconciliation.aws.sales_order_injection.main.handler
    timeout: 900
    memorySize: 256
    environment:
      TENANT: ${self:provider.tenant}
      STAGE: ${self:provider.stage}
      SQS_QUEUE: ${self:resources.Resources.IncomingSalesOrderQueue.Properties.QueueName}
      MAX_MESSAGE_QUEUE_SIZE: 40
    events:
      - schedule:
          name: ${self:provider.tenant}-netsuite-sales-order-injection-trigger
          rate: rate(2 minutes)

resources:
  Resources:
    IncomingCashSalesQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: True
        ContentBasedDeduplication: True
        VisibilityTimeout: 60
        QueueName: ${self:provider.tenant}-cash-sale-to-netsuite-queue.fifo
        RedrivePolicy:
          maxReceiveCount: 5
          deadLetterTargetArn: !GetAtt IncomingCashSalesDLQ.Arn
    IncomingCashSalesDLQ:
      Type: "AWS::SQS::Queue"
      Properties:
        FifoQueue: True
        ContentBasedDeduplication: True
        MessageRetentionPeriod: 1209600
        QueueName: ${self:provider.tenant}-cash-sale-to-netsuite-queue-dlq.fifo
    IncomingSalesOrderQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: True
        ContentBasedDeduplication: True
        VisibilityTimeout: 60
        QueueName: ${self:provider.tenant}-sales-order-to-netsuite-queue.fifo
        RedrivePolicy:
          maxReceiveCount: 5
          deadLetterTargetArn: !GetAtt IncomingSalesOrderDLQ.Arn
    IncomingSalesOrderDLQ:
      Type: "AWS::SQS::Queue"
      Properties:
        FifoQueue: True
        ContentBasedDeduplication: True
        MessageRetentionPeriod: 1209600
        QueueName: ${self:provider.tenant}-sales-order-to-netsuite-queue-dlq.fifo
