service: frankandoak-yotpo-shopper-loyalty
plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: false

package:
  exclude:
    - ./**
  include:
    - yotpo_shopper_loyalty/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  tenant: frankandoak
  region: us-east-1
  deploymentBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  configBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
  role: arn:aws:iam::#{AWS::AccountId}:role/LambdaExecutionRole
  environment:
    STAGE: ${self:provider.stage}
    TENANT: ${self:provider.tenant}
    REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:GetQueueUrl
        - sqs:SendMessage
        - sqs:GetQueueAttributes
      Resource: !GetAtt YotpoOrderOpenQueue.Arn

functions:
  yotpo_webhook:
    name: ${self:provider.tenant}-yotpo-webhook
    handler: yotpo_shopper_loyalty.aws.yotpo_event_listener.handler
    timeout: 300
    memorySize: 128
    events:
      - http: POST /yotpo_event_stream

  process_order_to_yotpo:
    name: ${self:provider.tenant}-process-order-to-yotpo
    handler: yotpo_shopper_loyalty.aws.process_order.handler
    timeout: 900
    environment:
      SQS_YOTPO_ORDER_OPENED:
        Fn::GetAtt:
          - YotpoOrderOpenQueue
          - QueueName
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - YotpoOrderOpenQueue
              - Arn
          batchSize: 1
#   process_cancellation_to_yotpo:
#     name: ${self:provider.tenant}-process-cancellation-to-yotpo
#     handler: yotpo_shopper_loyalty.aws.process_cancellation.handler
#     timeout: 900
#     environment:
#       SQS_YOTPO_ORDER_CANCELLED:
#         Fn::GetAtt:
#           - YotpoOrderCancellationQueue
#           - QueueName
#     events:
#       - sqs:
#           arn:
#             Fn::GetAtt:
#               - YotpoOrderCancellationQueue
#               - Arn
#           batchSize: 1

#   process_yotpo_return:
#     name: ${self:provider.tenant}-process-yotpo-return
#     handler: yotpo_shopper_loyalty.aws.store_return.handler
#     timeout: 900
#     environment:
#       SQS_YOTPO_ORDER_RETURN_PROCESSED:
#         Fn::GetAtt:
#           - YotpoReturnQueue
#           - QueueName
#     events:
#       - sqs:
#           arn:
#             Fn::GetAtt:
#               - YotpoReturnQueue
#               - Arn
#           batchSize: 1

resources:
  Resources:
    YotpoOrderOpenQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: True
        QueueName: ${self:provider.tenant}-yotpo-order-opened-queue.fifo
        VisibilityTimeout: 300
        ContentBasedDeduplication: True
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt YotpoOrderOpenDeadLetterQueue.Arn
          maxReceiveCount: 24
    YotpoOrderOpenDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: True
        ContentBasedDeduplication: True
        MessageRetentionPeriod: 1209600
        QueueName: ${self:provider.tenant}-yotpo-order-opened-queue-dlq.fifo
#     YotpoOrderCancellationQueue:
#       Type: "AWS::SQS::Queue"
#       Properties:
#         QueueName: ${self:provider.tenant}-yotpo-order-cancelled-queue.fifo
#         VisibilityTimeout: 300
#         RedrivePolicy:
#           deadLetterTargetArn: !GetAtt YotpoOrderCancellationDeadLetterQueue.Arn
#           maxReceiveCount: 24

#     YotpoOrderCancellationDeadLetterQueue:
#       Type: "AWS::SQS::Queue"
#       Properties:
#         FifoQueue: True
#         ContentBasedDeduplication: True
#         MessageRetentionPeriod: 1209600
#         QueueName: ${self:provider.tenant}-yotpo-order-cancelled-queue-dlq.fifo

#     YotpoReturnQueue:
#       Type: "AWS::SQS::Queue"
#       Properties:
#         QueueName: ${self:provider.tenant}-yotpo-order-return-processed-queue.fifo
#         VisibilityTimeout: 300
#         RedrivePolicy:
#           deadLetterTargetArn: !GetAtt YotpoReturnDeadLetterQueue.Arn
#           maxReceiveCount: 24

#     YotpoReturnDeadLetterQueue:
#       Type: "AWS::SQS::Queue"
#       Properties:
#         FifoQueue: True
#         ContentBasedDeduplication: True
#         MessageRetentionPeriod: 1209600
#         QueueName: ${self:provider.tenant}-yotpo-order-return-processed-queue-dlq.fifo
