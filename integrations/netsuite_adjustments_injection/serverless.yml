service: frankandoak-netsuite-adjustments-injection

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters

custom:
  pythonRequirements:
    dockerizePip: false

package:
  exclude:
    - ./**
  include:
    - netsuite_adjustments_injection/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'x'}
  tenant: frankandoak
  region: us-east-1
  deploymentBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz-deploy
  configBucket: ${self:provider.tenant}-${self:provider.stage}-0-newstore-dmz
  role: arn:aws:iam::#{AWS::AccountId}:role/LambdaExecutionRole
  environment:
    TENANT: ${self:provider.tenant}
    STAGE: ${self:provider.stage}
    SQS_QUEUE: ${self:provider.tenant}-adjustments-to-netsuite-queue.fifo
    MAX_MESSAGE_QUEUE_SIZE: 25
    EVENT_ID_CACHE: item-adjustment-event-id-cache
    DYNAMO_SCAN_LIMIT: 50
    newstore_url_api: ${self:provider.tenant}.${self:provider.stage}.newstore.net
    newstore_use_auth_lambda: 1
    newstore_auth_lambda: ${self:provider.tenant}-auth-token-generator-${self:provider.stage}-get_auth_token

functions:
  adjustments:
    name: ${self:provider.tenant}-adjustments-to-netsuite
    handler: netsuite_adjustments_injection.aws.process_event.handler
    timeout: 300
    memorySize: 256
    events:
      - schedule:
          name: ${self:provider.tenant}-adjustments-to-netsuite-trigger
          rate: rate(5 minutes)

resources:
  Resources:
    AdjustmentsQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: True
        ContentBasedDeduplication: True
        VisibilityTimeout: 300
        QueueName: ${self:provider.tenant}-adjustments-to-netsuite-queue.fifo
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt AdjustmentsDeadLetterQueue.Arn
          maxReceiveCount: 3

    AdjustmentsDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: True
        ContentBasedDeduplication: True
        MessageRetentionPeriod: 1209600 # 14 days
        QueueName: ${self:provider.tenant}-adjustments-to-netsuite-dlq.fifo

    AdjustmentsEventIdCache:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: item-adjustment-event-id-cache
        AttributeDefinitions:
          - AttributeName: 'id'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'id'
            KeyType: 'HASH'
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
